% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/KinPairSimulation.R
\name{make_KinPairSimulation}
\alias{make_KinPairSimulation}
\title{Constructor for KinPairSimulation Class}
\usage{
make_KinPairSimulation(
  tab,
  category = character(),
  simtype = character(),
  kerneltype = character(),
  sigma = numeric(),
  juvsigma = numeric(),
  breedsigma = numeric(),
  gravsigma = numeric(),
  ovisigma = numeric(),
  dims = numeric(),
  lifestage = character(),
  call = NULL,
  filtertype = character(),
  upper = numeric(),
  lower = numeric(),
  spacing = numeric(),
  samplenum = numeric(),
  sampledims = numeric()
)
}
\arguments{
\item{tab}{tibble of pairwise kin classes & distances. Ideally contains fields id1 & id2 (chr) an distance (dbl) optionally includes coords (x1, y1, x2, y2), lifestage (ls1 & ls2), category (chr) and sims (dbl)}

\item{category}{character. Code for kinship category of simulation. one of PO, FS, HS, AV, GG, HAV, GGG, 1C, 1C1, 2C, GAV, HGAV, H1C or H2C}

\item{simtype}{character. Type of simulation (currently 'simple' or 'composite')}

\item{kerneltype}{character. Statistical model for simulated dispersal kernel. Currently either "Gaussian" or "Laplace".}

\item{sigma}{numeric. Axial sigma of dispersal kernel (axial standard deviation). Used with 'simple' simtype}

\item{juvsigma}{numeric. Axial sigma of prebreeding ('juvenile') dispersal kernel (axial standard deviation). Used with 'composite' simtype}

\item{breedsigma}{numeric. Axial sigma of breeding dispersal kernel (axial standard deviation). Used with 'composite' simtype}

\item{gravsigma}{numeric. Axial sigma of post-breeding ('gravid') dispersal kernel (axial standard deviation). Used with 'composite' simtype}

\item{ovisigma}{numeric. Axial sigma of oviposition dispersal kernel (axial standard deviation). Used with 'composite' simtype}

\item{dims}{numeric. Length of side of simulated area square.}

\item{lifestage}{character. Simulated lifestage of sampling. Either "larva" (sampled at hatching) or "oviposition" (sampled as an adult during oviposition - essentially one lifespan later that 'larva')}

\item{call}{call object. Use to pass the system call that led to the generation of this class. (via sys.call)}

\item{filtertype}{character. Has a value of 'filtered' if object has been passed through the sample_kindist() function or equivalent. Blank otherwise.}

\item{upper}{numeric. upper cutoff for kin pair distances (if filtered)}

\item{lower}{numeric. lower cutoff for kin pair distances (if filtered)}

\item{spacing}{numeric. spacing between traps (assume 1D layout) (if filtered)}

\item{samplenum}{numeric. number of individuals retained within data (if filtered)}

\item{sampledims}{numeric. Dimensions used in filtering process (side of square) (if filtered)}
}
\value{
Returns an object of class 'KinPairSimulation'
}
\description{
Constructor for KinPairSimulation Class
}
\examples{
kindata <- tibble::tibble(id1 = c("a", "b", "c"), id2 = c("x", "y", "z"),
    distance = c(50, 45, 65), category = c("1C", "1C", "1C"))
make_KinPairSimulation(kindata, "1C", "simple", "Gaussian", sigma = 38, lifestage = "larva")
}
